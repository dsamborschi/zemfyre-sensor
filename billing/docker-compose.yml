# Billing - Docker Compose for Local Development

version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: billing
      POSTGRES_PASSWORD: billing123
      POSTGRES_DB: billing
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Auto-run migrations
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U billing"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  billing:
    build: .
    ports:
      - "3100:3100"
    environment:
      NODE_ENV: development
      PORT: 3100
      DATABASE_URL: postgres://billing:billing123@postgres:5432/billing
      
      # Database connection for migrations
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: billing
      DB_PASSWORD: billing123
      DB_NAME: billing
      
      # Redis (for deployment queue)
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      QUEUE_CONCURRENCY: 3
      QUEUE_MAX_RETRIES: 3
      QUEUE_RETRY_DELAY: 60000
      
      # Stripe (use your test keys)
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      # Get this from: docker logs billing-stripe-cli (look for "Ready! Your webhook signing secret is whsec_...")
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      
      # Stripe Price IDs (create these in Stripe dashboard)
      STRIPE_PRICE_STARTER: ${STRIPE_PRICE_STARTER}
      STRIPE_PRICE_PROFESSIONAL: ${STRIPE_PRICE_PROFESSIONAL}
      STRIPE_PRICE_ENTERPRISE: ${STRIPE_PRICE_ENTERPRISE}
      
      # License keys
      LICENSE_PRIVATE_KEY_PATH: ${LICENSE_PRIVATE_KEY_PATH}
      LICENSE_PUBLIC_KEY_PATH: ${LICENSE_PUBLIC_KEY_PATH}

      # Trial configuration
      DEFAULT_TRIAL_DAYS: 14
      
      # Kubernetes deployment
      BASE_DOMAIN: localhost  # Use localhost for Docker Desktop K8s
      HELM_CHART_PATH: /app/charts/customer-instance
      # Set to 'false' to use real K8s (Docker Desktop or AKS)
      SIMULATE_K8S_DEPLOYMENT: ${SIMULATE_K8S_DEPLOYMENT:-true}
      # Kubeconfig path (mounted from host)
      KUBECONFIG: /root/.kube/config
      # Use docker-desktop context
      KUBE_CONTEXT: docker-desktop
    volumes:
      - ./keys:/app/keys
      - ./dist:/app/dist
      - ../charts:/app/charts
      # Mount kubeconfig for K8s access (Windows: %USERPROFILE%/.kube)
      # This includes both docker-desktop and any cloud clusters
      - ${USERPROFILE}/.kube/config:/root/.kube/config:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Stripe CLI for webhook testing
  stripe-cli:
    image: stripe/stripe-cli:latest
    container_name: billing-stripe-cli
    command: listen --forward-to http://billing:3100/api/webhooks/stripe --skip-verify
    environment:
      # Set your Stripe API key
      STRIPE_API_KEY: ${STRIPE_SECRET_KEY}
    depends_on:
      - billing
    # Note: On first run, you'll need to get the webhook signing secret
    # Run: docker logs billing-stripe-cli
    # Look for: "Ready! Your webhook signing secret is whsec_..." 
    # Update STRIPE_WEBHOOK_SECRET in billing service with this value

volumes:
  postgres_data:
  redis_data:
