
# Clean up any broken Docker repository files from previous runs
- name: Remove broken Docker repository files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/sources.list.d/docker.list
    - /etc/apt/keyrings/docker.gpg
  ignore_errors: true

# Update apt cache after cleanup
- name: Update apt cache after cleanup
  ansible.builtin.apt:
    update_cache: yes
  ignore_errors: true

# Check if Docker is already installed
- name: Check if Docker is installed
  ansible.builtin.command: docker --version
  register: docker_version
  ignore_errors: true
  changed_when: false

- name: Display Docker version if installed
  ansible.builtin.debug:
    msg: "Docker already installed: {{ docker_version.stdout }}"
  when: docker_version.rc == 0

# Install Docker using official convenience script
# This script handles everything: GPG keys, repository setup, package installation
- name: Install Docker using official script
  ansible.builtin.shell: |
    curl -fsSL https://get.docker.com -o /tmp/get-docker.sh
    sh /tmp/get-docker.sh
    rm /tmp/get-docker.sh
  when: docker_version.rc != 0
  register: docker_install
  changed_when: true

- name: Display Docker installation output
  ansible.builtin.debug:
    msg: "{{ docker_install.stdout_lines }}"
  when: docker_version.rc != 0 and docker_install.stdout_lines is defined
  register: docker_install
  changed_when: true

- name: Display Docker installation output
  ansible.builtin.debug:
    msg: "{{ docker_install.stdout_lines }}"
  when: docker_version.rc != 0 and docker_install.stdout_lines is defined

# Verify Docker installation
- name: Verify Docker installation
  ansible.builtin.command: docker --version
  register: docker_verify
  changed_when: false

- name: Display Docker version after installation
  ansible.builtin.debug:
    msg: "âœ… Docker installed: {{ docker_verify.stdout }}"

# Ensure Docker service is enabled and running
- name: Enable and start Docker service
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started

# Add user to Docker group
- name: Add current user to Docker group
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups: docker
    append: true