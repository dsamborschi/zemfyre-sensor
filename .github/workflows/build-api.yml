name: Build and Push Api Image

on: 
  push:
    branches:
      - master
    paths:
      - 'api/**' 
      - '.github/workflows/build-api.yml'

jobs:
  buildx:
    name: Build & Push Api Image
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - board: x86
            platform: linux/amd64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache/${{ matrix.board }}
          key: buildx-api-${{ matrix.board }}-${{ github.sha }}
          restore-keys: |
            buildx-api-${{ matrix.board }}-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Generate Docker tags
        id: meta
        run: |
          # Create version tag: v1.0.{RUN_NUMBER}-{SHORT_SHA}
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          VERSION_TAG="v1.0.${{ github.run_number }}-${SHORT_SHA}"
          echo "version_tag=${VERSION_TAG}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "Generated version tag: ${VERSION_TAG}"

      - name: Build & Push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=local,src=/tmp/.buildx-cache/${{ matrix.board }}
          cache-to: type=local,dest=/tmp/.buildx-cache/${{ matrix.board }},mode=max
          tags: |
            iotistic/api:latest
            iotistic/api:${{ steps.meta.outputs.version_tag }}
            iotistic/api:${{ steps.meta.outputs.short_sha }}
          labels: |
            org.opencontainers.image.title=Iotistic API
            org.opencontainers.image.description=IoT Platform API Service
            org.opencontainers.image.version=${{ steps.meta.outputs.version_tag }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
