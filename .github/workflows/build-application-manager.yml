name: Build, Test & Push Application Manager

on: 
  push:
    branches:
      - master
    paths:
      - 'application-manager/**' 

jobs:
  buildx:
    name: Build, Test & Push Application Manager
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - board: pi4
            platform: linux/arm/v7
          - board: pi4-64
            platform: linux/arm64/v8
          - board: pi5
            platform: linux/arm64/v8
          - board: x86
            platform: linux/amd64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache/${{ matrix.board }}
          key: buildx-manager-${{ matrix.board }}-${{ github.sha }}
          restore-keys: |
            buildx-manager-${{ matrix.board }}-

      # Build locally but DO NOT push yet
      - name: Build image (local only)
        uses: docker/build-push-action@v5
        with:
          context: ./application-manager
          file: ./application-manager/Dockerfile
          load: true
          platforms: ${{ matrix.platform }}
          cache-from: type=local,src=/tmp/.buildx-cache/${{ matrix.board }}
          cache-to: type=local,dest=/tmp/.buildx-cache/${{ matrix.board }},mode=max
          tags: |
            iotistic/application-manager:test-${{ matrix.board }}

      # Run app and tests in same container
      - name: Run tests inside container
        run: |
          docker run --rm \
            --platform ${{ matrix.platform }} \
            -v ${{ github.workspace }}/application-manager/test:/app/test \
            -e API_URL="http://localhost:3002" \
            iotistic/application-manager:test-${{ matrix.board }} \
            bash -c "
              # Start app in background
              npm run start:docker &
              APP_PID=\$!
              echo 'Waiting for app to start...'
              for i in {1..15}; do
                if curl -fs http://localhost:3002/health >/dev/null; then break; fi
                sleep 1
              done
              # Run CI tests
              bash /app/test/ci-test.sh
              # Stop app
              kill \$APP_PID
            "

      # Login to Docker Hub (only if tests passed)
      - name: Login to Docker Hub
        if: success()
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build again but this time PUSH to registry
      - name: Build & Push final image
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: ./application-manager
          file: ./application-manager/Dockerfile
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=local,src=/tmp/.buildx-cache/${{ matrix.board }}
          cache-to: type=local,dest=/tmp/.buildx-cache/${{ matrix.board }},mode=max
          tags: |
            iotistic/application-manager:latest-${{ matrix.board }}