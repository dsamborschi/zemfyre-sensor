{{- if and .Values.monitoring.enabled .Values.monitoring.dedicated }}
---
# Dedicated Prometheus for Enterprise tier customers
# This is a premium feature - most customers use shared Prometheus
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "customer-instance.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "customer-instance.labels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "customer-instance.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "customer-instance.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "customer-instance.fullname" . }}-prometheus
subjects:
- kind: ServiceAccount
  name: {{ include "customer-instance.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "customer-instance.fullname" . }}-prometheus-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "customer-instance.labels" . | nindent 4 }}
data:
  prometheus.yml: |
    global:
      scrape_interval: {{ .Values.monitoring.scrapeInterval }}
      evaluation_interval: 30s
      external_labels:
        customer_id: {{ .Values.customer.id | quote }}
        customer_plan: {{ .Values.customer.plan | quote }}
        cluster: {{ .Values.customer.id | quote }}
    
    scrape_configs:
    # API metrics
    - job_name: 'api'
      static_configs:
      - targets: ['{{ include "customer-instance.fullname" . }}-api:{{ .Values.api.port }}']
        labels:
          service: 'api'
          customer_id: {{ .Values.customer.id | quote }}
    
    {{- if .Values.mosquitto.metrics.enabled }}
    # MQTT broker metrics
    - job_name: 'mosquitto'
      static_configs:
      - targets: ['{{ include "customer-instance.fullname" . }}-mosquitto:{{ .Values.mosquitto.metrics.port }}']
        labels:
          service: 'mosquitto'
          customer_id: {{ .Values.customer.id | quote }}
    {{- end }}
    
    {{- if .Values.postgres.metrics.enabled }}
    # PostgreSQL metrics
    - job_name: 'postgres'
      static_configs:
      - targets: ['{{ include "customer-instance.fullname" . }}-postgres:{{ .Values.postgres.metrics.port }}']
        labels:
          service: 'postgres'
          customer_id: {{ .Values.customer.id | quote }}
    {{- end }}
    
    {{- if .Values.opencost.enabled }}
    # OpenCost - infrastructure cost metrics
    - job_name: 'opencost'
      static_configs:
      - targets: ['{{ include "customer-instance.fullname" . }}-opencost:{{ .Values.opencost.service.port }}']
        labels:
          service: 'opencost'
          customer_id: {{ .Values.customer.id | quote }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "customer-instance.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "customer-instance.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "customer-instance.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        {{- include "customer-instance.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: {{ include "customer-instance.fullname" . }}-prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--storage.tsdb.retention.time={{ .Values.monitoring.retention }}'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
        - '--web.enable-lifecycle'
        ports:
        - name: http
          containerPort: 9090
        resources:
          {{- toYaml .Values.monitoring.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: storage
          mountPath: /prometheus
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: {{ include "customer-instance.fullname" . }}-prometheus-config
      - name: storage
        persistentVolumeClaim:
          claimName: {{ include "customer-instance.fullname" . }}-prometheus-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "customer-instance.fullname" . }}-prometheus-storage
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "customer-instance.labels" . | nindent 4 }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.monitoring.storageSize }}
  {{- if .Values.postgres.storage.storageClass }}
  storageClassName: {{ .Values.postgres.storage.storageClass }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "customer-instance.fullname" . }}-prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "customer-instance.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    {{- include "customer-instance.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
{{- end }}
