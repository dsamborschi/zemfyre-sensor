{{- if .Values.dashboard.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "customer-instance.fullname" . }}-dashboard
  labels:
    {{- include "customer-instance.labels" . | nindent 4 }}
    app.kubernetes.io/component: dashboard
spec:
  replicas: {{ .Values.dashboard.replicas }}
  selector:
    matchLabels:
      {{- include "customer-instance.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      labels:
        {{- include "customer-instance.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: dashboard
    spec:
      containers:
      - name: dashboard
        image: "{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag }}"
        ports:
        - name: http
          containerPort: {{ .Values.dashboard.port }}
        env:
        - name: API_URL
          value: http://{{ include "customer-instance.fullname" . }}-api:{{ .Values.api.port }}
        - name: MQTT_URL
          value: ws://{{ include "customer-instance.fullname" . }}-mosquitto:{{ .Values.mosquitto.ports.websocket }}
        resources:
          {{- toYaml .Values.dashboard.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "customer-instance.fullname" . }}-dashboard
  labels:
    {{- include "customer-instance.labels" . | nindent 4 }}
    app.kubernetes.io/component: dashboard
spec:
  type: ClusterIP
  ports:
  - name: http
    port: {{ .Values.dashboard.port }}
    targetPort: http
  selector:
    {{- include "customer-instance.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: dashboard
{{- end }}
