- name: Ensure [Time] section exists in timesyncd.conf
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^\[Time\]'
    line: '[Time]'
    create: yes
    state: present

- name: Configure systemd-timesyncd NTP server
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^NTP='
    line: 'NTP={{ ntp_server_ip }}'
    insertafter: '^\[Time\]'
    create: yes

- name: Set fallback NTP servers to Debian pool
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^FallbackNTP='
    line: 'FallbackNTP=0.debian.pool.ntp.org 1.debian.pool.ntp.org 2.debian.pool.ntp.org 3.debian.pool.ntp.org'
    insertafter: '^\[Time\]'
    create: yes

- name: Allow systemd-timesyncd to handle large offsets (48 hours)
  lineinfile:
    path: /etc/systemd/timesyncd.conf
    regexp: '^RootDistanceMaxSec='
    line: 'RootDistanceMaxSec=172800'
    insertafter: '^\[Time\]'
    create: yes

- name: Enable and start systemd-timesyncd
  ansible.builtin.systemd:
    name: systemd-timesyncd
    enabled: yes
    state: restarted
  ignore_errors: true

# ---------------- Docker Installation ----------------

- name: Make sure distro package of Docker is absent
  ansible.builtin.apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
      - docker-compose
    state: absent
    purge: yes
    update_cache: yes

- name: Map Debian codename to supported Docker repo
  ansible.builtin.set_fact:
    docker_codename: >-
      {% if debian_name.stdout in ['noble', 'trixie'] %}
        bookworm
      {% else %}
        {{ debian_name.stdout }}
      {% endif %}

- name: Add Docker apt key (x86)
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  when: ansible_architecture == "x86_64"

- name: Add Docker apt key (Raspberry Pi)
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/raspbian/gpg
    state: present
  when: ansible_architecture in ["aarch64", "armv7l", "armv6l"]

- name: Get Debian name
  ansible.builtin.command: lsb_release -cs
  register: debian_name
  changed_when: false

- name: Check system bit width
  ansible.builtin.command: getconf LONG_BIT
  register: system_bits
  changed_when: false

- name: Set architecture for Docker packages
  ansible.builtin.set_fact:
    architecture: >-
      {% if device_type == "pi5" %}
        arm64
      {% elif ansible_architecture == "x86_64" %}
        amd64
      {% elif device_type in ["pi4"] and system_bits.stdout == "64" %}
        arm64
      {% else %}
        armhf
      {% endif %}

- name: Add Docker repository
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    create: true
    line: "deb [arch={{ architecture }}] https://download.docker.com/linux/debian {{ docker_codename }} stable"
    state: present
    owner: root
    group: root
    mode: "0644"

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker
  ansible.builtin.apt:
    name:
      - "docker-ce:{{ architecture }}"
      - "docker-ce-cli:{{ architecture }}"
      - "docker-compose-plugin:{{ architecture }}"
    update_cache: yes
    install_recommends: false

- name: Add user to Docker group (all platforms)
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups:
      - docker
      - adm
      - sudo
      - video
      - plugdev
      - users
      - input
      - netdev
      - dialout
    append: yes

- name: Add user to Docker group (Raspberry Pi)
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups:
      - docker
      - adm
      - sudo
      - video
      - plugdev
      - users
      - input
      - netdev
      - gpio
      - dialout
    append: yes
  when: ansible_architecture in ["aarch64", "armv7l", "armv6l"]

- name: Perform system upgrade
  ansible.builtin.apt:
    upgrade: dist
  tags:
    - system-upgrade

- name: Clean up unused packages
  ansible.builtin.apt:
    autoremove: true
  tags:
    - system-upgrade

- name: Remove deprecated pip dependencies (<= Debian 11)
  ansible.builtin.pip:
    name: supervisor
    state: absent
  when:
    - ansible_distribution_major_version | int <= 11

- name: Remove deprecated pip dependencies (>= Debian 12)
  ansible.builtin.pip:
    name: supervisor
    executable: /home/{{ lookup('env', 'USER') }}/installer_venv/bin/pip
    state: absent
  when:
    - ansible_distribution_major_version | int >= 12