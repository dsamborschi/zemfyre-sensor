---
# Config tasks

- name: Ensure git is installed
  apt:
    name: git
    state: present
  become: true

- name: Ensure curl is installed
  apt:
    name: curl
    state: present
  become: true

- name: Check if Docker is installed
  command: docker --version
  register: docker_check
  failed_when: false
  changed_when: false

- name: Install Docker if not present
  block:
    - name: Download Docker installation script
      get_url:
        url: https://get.docker.com
        dest: /tmp/get-docker.sh
        mode: '0755'

    - name: Run Docker installation script
      shell: /tmp/get-docker.sh

    - name: Add user to docker group
      user:
        name: "{{ kiosk_user }}"
        groups: docker
        append: yes

    - name: Remove Docker installation script
      file:
        path: /tmp/get-docker.sh
        state: absent

    - name: Check Docker version
      ansible.builtin.command: docker --version
      register: docker_version
      changed_when: false

    - name: Show Docker version
      ansible.builtin.debug:
        msg: "{{ docker_version.stdout }}"
  when: docker_check.rc != 0
  become: true

- name: Check if ngrok is running as a systemd service
  shell: systemctl is-active ngrok.service
  register: ngrok_status
  changed_when: false
  failed_when: false

- name: Print ngrok service status
  debug:
    msg: "ngrok is {{ 'running' if ngrok_status.stdout == 'active' else 'not running or not installed' }}"

- name: Check Docker Compose availability
  command: docker compose version
  register: docker_compose_check
  failed_when: false
  changed_when: false

- name: Ensure repo directory exists
  file:
    path: "{{ repo_dir }}"
    state: directory
    owner: "{{ kiosk_user }}"
    group: "{{ kiosk_user }}"
    mode: '0755'
  become: true

- name: Download or update zemfyre-sensor repo
  git:
    repo: "{{ repo_url }}"
    dest: "{{ repo_dir }}"
    update: yes
    force: yes

- name: Copy Raspberry Pi-specific .env file to repo directory
  copy:
    src: "{{ playbook_dir }}/.env.pi"
    dest: "{{ repo_dir }}/.env"
    mode: '0644'

- name: Run Docker Compose (Headless mode with Pi override)
  community.docker.docker_compose_v2:
    project_src: "{{ repo_dir }}"
    files:
      - docker-compose.pi.yaml
    state: present
    build: always
  become: true
  register: compose_output

- name: Prune unused Docker images (dangling only)
  community.docker.docker_prune:
    images: true
    images_filters:
      dangling: "true"

- name: Print Docker Compose output
  debug:
    msg: "{{ compose_output }}"
  when: compose_output is defined

- name: Fix Grafana data directory ownership (UID 472 - Grafana container user)
  file:
    path: "{{ repo_dir }}/grafana/data"
    owner: "472"
    group: "0"
    recurse: yes
    state: directory
  become: true

- name: Set Grafana data directory permissions (775)
  file:
    path: "{{ repo_dir }}/grafana/data"
    mode: '0775'
    recurse: yes
    state: directory
  become: true

- name: Debug final kiosk setup
  debug:
    msg: "Kiosk setup complete. Mode detected: {{ hostvars[inventory_hostname]['desktop_mode'] | default('unknown') }}"

- name: Reboot Raspberry Pi to apply changes and start kiosk mode
  reboot:
    msg: "Reboot initiated by Ansible to start kiosk mode with zemfyre-sensor dashboard."
    connect_timeout: 5
    reboot_timeout: 120
    pre_reboot_delay: 5