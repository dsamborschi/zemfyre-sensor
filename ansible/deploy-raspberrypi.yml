---
- name: Deploy zemfyre-sensor to Raspberry Pi
  hosts: raspberrypi
  become: yes
  vars:
    repo_url: "https://github.com/dsamborschi/zemfyre-sensor.git"
    repo_dir: "zemfyre-sensor"
    setup_script: "setup.sh"
    kiosk_url: "http://localhost:53000/d/ddwxbtmmr6nlsa/zus80lp?orgId=1&refresh=1s&from=now-5m&to=now&kiosk"
    autostart_file: "/etc/xdg/lxsession/LXDE-pi/autostart"

  tasks:
    - name: Ensure git is installed
      apt:
        name: git
        state: present
      become: yes

    - name: Ensure curl is installed
      apt:
        name: curl
        state: present
      become: yes

    - name: Ensure Chromium and kiosk tools are installed
      apt:
        name:
          - chromium-browser
          - unclutter
          - xdotool
        state: present
        update_cache: yes

    - name: Check if autostart file exists
      stat:
        path: "{{ autostart_file }}"
      register: autostart_file_stat
    
    - name: Read current kiosk autostart content (if exists)
      slurp:
        path: "{{ autostart_file }}"
      register: autostart_file_content
      when: autostart_file_stat.stat.exists


    - name: Create kiosk autostart file only if kiosk_url is not set
      copy:
        dest: "{{ autostart_file }}"
        content: |
          @lxpanel --profile LXDE-pi
          @pcmanfm --desktop --profile LXDE-pi
          @xscreensaver -no-splash

          @xset s off
          @xset -dpms
          @xset s noblank
          @unclutter -idle 0.1 -root
          @chromium-browser --noerrdialogs --disable-infobars --kiosk {{ kiosk_url }}
        owner: root
        group: root
        mode: '0644'
      # when: >
      #   not autostart_file_stat.stat.exists or
      #   (autostart_file_content.content | b64decode).find(kiosk_url) == -1

    - name: Download or update zemfyre-sensor repo
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dir }}"
        update: yes
        force: yes

    - name: Ensure setup.sh is executable
      file:
        path: "{{ repo_dir }}/{{ setup_script }}"
        mode: '0755'

    - name: Run setup.sh
      command: ./{{ setup_script }}
      args:
        chdir: "{{ repo_dir }}"
      become: yes
      register: setup_output
      environment:
        MOSQUITTO_PORT_EXT: "{{ lookup('env', 'MOSQUITTO_PORT_EXT') | default('1883') }}"
        MOSQUITTO_WS_PORT_EXT: "{{ lookup('env', 'MOSQUITTO_WS_PORT_EXT') | default('59001') }}"
        NODERED_PORT_EXT: "{{ lookup('env', 'NODERED_PORT_EXT') | default('51880') }}"
        INFLUXDB_PORT_EXT: "{{ lookup('env', 'INFLUXDB_PORT_EXT') | default('58086') }}"
        GRAFANA_PORT_EXT: "{{ lookup('env', 'GRAFANA_PORT_EXT') | default('53000') }}"
    
    # - name: Reboot to activate kiosk mode
    #   reboot:
    #     msg: "Rebooting into kiosk mode"
    #     pre_reboot_delay: 5
    #   when: reboot_required is not defined

    - name: Print setup.sh stdout
      debug:
       msg: "{{ setup_output.stdout_lines }}"
      when: setup_output is defined