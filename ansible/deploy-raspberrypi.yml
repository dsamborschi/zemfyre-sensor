---
- name: Deploy zemfyre-sensor to Raspberry Pi
  hosts: raspberrypi
  become: yes
  vars:
    repo_url: "https://github.com/dsamborschi/zemfyre-sensor.git"
    repo_dir: "zemfyre-sensor"
    setup_script: "setup.sh"
    kiosk_url: "http://localhost:53000/d/ddwxbtmmr6nlsa/zus80lp?orgId=1&refresh=5s&from=now-5m&to=now&kiosk"
    autostart_file: "/etc/xdg/lxsession/LXDE-pi/autostart"

  tasks:
    - name: Ensure git is installed
      apt:
        name: git
        state: present
      become: yes

    - name: Ensure curl is installed
      apt:
        name: curl
        state: present
      become: yes

    - name: Ensure Chromium and kiosk tools are installed
      apt:
        name:
          - chromium-browser
          - unclutter
          - xdotool
        state: present
        update_cache: yes
    
    - name: Check if ngrok is running as a systemd service
      shell: systemctl is-active ngrok.service
      register: ngrok_status
      changed_when: false
      failed_when: false

    - name: Print ngrok service status
      debug:
        msg: "ngrok is {{ 'running' if ngrok_status.stdout == 'active' else 'not running or not installed' }}"

    - name: Overwrite LXDE autostart file with kiosk setup
      copy:
        dest: "{{ autostart_file }}"
        content: |
          @lxpanel --profile LXDE-piAdd commentMore actions
          @pcmanfm --desktop --profile LXDE-pi
          @xscreensaver -no-splash

          @xset s off
          @xset -dpms
          @xset s noblank
          @unclutter -idle 0.1 -root
          @chromium-browser --noerrdialogs --disable-infobars --kiosk {{ kiosk_url }}
        owner: root
        group: root
        mode: '0644'

    - name: Download or update zemfyre-sensor repo
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dir }}"
        update: yes
        force: yes

    - name: Ensure setup.sh is executable
      file:
        path: "{{ repo_dir }}/{{ setup_script }}"
        mode: '0755'

    - name: Run setup.sh
      command: ./{{ setup_script }}
      args:
        chdir: "{{ repo_dir }}"
      become: yes
      register: setup_output
      environment:
        MOSQUITTO_PORT_EXT: "{{ lookup('env', 'MOSQUITTO_PORT_EXT') | default('1883') }}"
        MOSQUITTO_WS_PORT_EXT: "{{ lookup('env', 'MOSQUITTO_WS_PORT_EXT') | default('9001') }}"
        NODERED_PORT_EXT: "{{ lookup('env', 'NODERED_PORT_EXT') | default('1880') }}"
        INFLUXDB_PORT_EXT: "{{ lookup('env', 'INFLUXDB_PORT_EXT') | default('8086') }}"
        GRAFANA_PORT_EXT: "{{ lookup('env', 'GRAFANA_PORT_EXT') | default('3000') }}"
    
    - name: Print setup.sh stdout
      debug:
       msg: "{{ setup_output.stdout_lines }}"
      when: setup_output is defined

    - name: Reboot Raspberry Pi to apply chnages and start kiosk mode
      reboot:
        msg: "Reboot initiated by Ansible to start kiosk mode with updated Chromium settings."
        connect_timeout: 5
        reboot_timeout: 120
        pre_reboot_delay: 5
        post_reboot_delay: 10
