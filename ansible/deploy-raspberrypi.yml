---
- name: Deploy zemfyre-sensor to Raspberry Pi
  hosts: raspberrypi
  become: yes
  vars:
    repo_url: "https://github.com/dsamborschi/zemfyre-sensor.git"
    repo_dir: "zemfyre-sensor"
    setup_script: "setup.sh"
    autostart_file: "/etc/xdg/lxsession/LXDE-pi/autostart"

  tasks:
    - name: Load GRAFANA_PORT_EXT from .env file
      set_fact:
        grafana_port_ext: "{{ lookup('file', playbook_dir + '/.env').splitlines() | select('match', '^GRAFANA_PORT_EXT=') | map('regex_replace', '^GRAFANA_PORT_EXT=(.*)$', '\\1') | list | first | default('3000') }}"
    
    - name: Show loaded Grafana port
      debug:
        msg: "GRAFANA_PORT_EXT loaded from .env is: {{ grafana_port_ext }}"

    - name: Set kiosk_url with dynamic port
      set_fact:
        kiosk_url: "http://localhost:{{ grafana_port_ext }}/d/deqcaxn5g7vnkd/zus80lp-compact?orgId=1&refresh=auto&from=now-5m&to=now"

    - name: Ensure git is installed
      apt:
        name: git
        state: present
      become: yes

    - name: Ensure curl is installed
      apt:
        name: curl
        state: present
      become: yes

    - name: Ensure Chromium and kiosk tools are installed
      apt:
        name:
          - chromium-browser
          - unclutter
          - xdotool
        state: present
        update_cache: yes
    
    - name: Check if ngrok is running as a systemd service
      shell: systemctl is-active ngrok.service
      register: ngrok_status
      changed_when: false
      failed_when: false

    - name: Print ngrok service status
      debug:
        msg: "ngrok is {{ 'running' if ngrok_status.stdout == 'active' else 'not running or not installed' }}"

    - name: Overwrite LXDE autostart file with kiosk setup
      copy:
        dest: "{{ autostart_file }}"
        content: |
          @lxpanel --profile LXDE-piAdd commentMore actions
          @pcmanfm --desktop --profile LXDE-pi
          @xscreensaver -no-splash

          @xset s off
          @xset -dpms
          @xset s noblank
          @unclutter -idle 0.1 -root
          @chromium-browser --noerrdialogs --disable-infobars --kiosk {{ kiosk_url }}
        owner: root
        group: root
        mode: '0644'

    - name: Download or update zemfyre-sensor repo
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dir }}"
        update: yes
        force: yes
    
    - name: Copy Raspberry Pi-specific .env file to repo directory
      copy:
        src: "{{ playbook_dir }}/.env"
        dest: "{{ repo_dir }}/.env"
        mode: '0644'

    - name: Ensure setup.sh is executable
      file:
        path: "{{ repo_dir }}/{{ setup_script }}"
        mode: '0755'
        

    - name: Run setup.sh
      command: ./{{ setup_script }}
      args:
        chdir: "{{ repo_dir }}"
      become: yes
      register: setup_output
    
    - name: Print setup.sh stdout
      debug:
       msg: "{{ setup_output.stdout_lines }}"
      when: setup_output is defined

    - name: Reboot Raspberry Pi to apply chnages and start kiosk mode
      reboot:
        msg: "Reboot initiated by Ansible to start kiosk mode with updated Chromium settings."
        connect_timeout: 5
        reboot_timeout: 120
        pre_reboot_delay: 5
        post_reboot_delay: 10

