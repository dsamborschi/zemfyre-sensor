---
- name: Deploy zemfyre-sensor to Raspberry Pi
  hosts: raspberrypi
  become: yes
  vars:
    repo_url: "https://github.com/dsamborschi/zemfyre-sensor.git"
    repo_dir: "zemfyre-sensor"
    setup_script: "setup.sh"
    autostart_file: "/etc/xdg/lxsession/LXDE-pi/autostart"
    kiosk_user: "zemfyre"

  tasks:
    - name: Load GRAFANA_PORT_EXT from .env file
      set_fact:
        grafana_port_ext: "{{ lookup('file', playbook_dir + '/.env.pi').splitlines() | select('match', '^GRAFANA_PORT_EXT=') | map('regex_replace', '^GRAFANA_PORT_EXT=(.*)$', '\\1') | list | first | default('3000') }}"
    
    - name: Show loaded Grafana port
      debug:
        msg: "GRAFANA_PORT_EXT loaded from .env.pi is: {{ grafana_port_ext }}"

    - name: Set kiosk_url with dynamic port
      set_fact:
        kiosk_url: "http://localhost:51850/"

    
    - name: Ensure git is installed
      apt:
        name: git
        state: present
      become: yes

    - name: Ensure curl is installed
      apt:
        name: curl
        state: present
      become: yes

    - name: Check if Docker is installed
      command: docker --version
      register: docker_check
      failed_when: false
      changed_when: false

    - name: Install Docker if not present
      block:
        - name: Download Docker installation script
          get_url:
            url: https://get.docker.com
            dest: /tmp/get-docker.sh
            mode: '0755'
        
        - name: Run Docker installation script
          shell: /tmp/get-docker.sh
          
        - name: Add user to docker group
          user:
            name: "{{ kiosk_user }}"
            groups: docker
            append: yes
            
        - name: Remove Docker installation script
          file:
            path: /tmp/get-docker.sh
            state: absent

        - name: Check Docker version
          ansible.builtin.command: docker --version
          register: docker_version
          changed_when: false

        - name: Show Docker version
          ansible.builtin.debug:
            msg: "{{ docker_version.stdout }}"
            
      when: docker_check.rc != 0
      become: yes

    - name: Check Docker Compose availability
      command: docker compose version
      register: docker_compose_check
      failed_when: false
      changed_when: false

    - name: Ensure Chromium and kiosk tools are installed
      apt:
        name:
          - xserver-xorg
          - x11-xserver-utils
          - xinit
          - openbox
          - unclutter
          - chromium-browser
        state: present
        update_cache: yes
    
    - name: Create .xinitrc from template for X11 + Chromium kiosk setup
      template:
        src: xinitrc.j2
        dest: "/home/{{ kiosk_user }}/.xinitrc"
        owner: "{{ kiosk_user }}"
        group: "{{ kiosk_user }}"
        mode: '0755'


    - name: Ensure repo directory exists
      file:
        path: "{{ repo_dir }}"
        state: directory
        owner: "{{ kiosk_user }}"
        group: "{{ kiosk_user }}"
        mode: '0755'
      become: true

    - name: Download or update zemfyre-sensor repo
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dir }}"
        update: yes
        force: yes
    
    - name: Copy Raspberry Pi-specific .env file to repo directory
      copy:
        src: "{{ playbook_dir }}/.env.pi"
        dest: "{{ repo_dir }}/.env"
        mode: '0644'

    # - name: Run Docker Compose
    #   community.docker.docker_compose_v2:
    #     project_src: "{{ repo_dir }}"
    #     state: present
    #     build: always
    #   become: yes
    #   register: compose_output

    - name: Run Docker Compose (with Pi override)
      community.docker.docker_compose_v2:
        project_src: "{{ repo_dir }}"
        files:
          - docker-compose.yaml
          - docker-compose.override.yaml
        state: present
        build: always
      become: yes
      register: compose_output


    - name: Print Docker Compose output
      debug:
        msg: "{{ compose_output }}"
      when: compose_output is defined

    - name: Fix Grafana data directory ownership (UID 472 - Grafana container user)
      file:
        path: "{{ repo_dir }}/grafana/data"
        owner: "472"
        group: "0"
        recurse: yes
        state: directory
      become: yes

    - name: Set Grafana data directory permissions (775)
      file:
        path: "{{ repo_dir }}/grafana/data"
        mode: '0775'
        recurse: yes
        state: directory
      become: yes


    - name: Reboot Raspberry Pi to apply chnages and start kiosk mode
      reboot:
        msg: "Reboot initiated by Ansible to start kiosk mode with updated Chromium settings."
        connect_timeout: 5
        reboot_timeout: 120
        pre_reboot_delay: 5
        post_reboot_delay: 10
